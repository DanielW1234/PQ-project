<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njust.springboot.mapper.LectureMapper">
    <resultMap id="LectureResultMap" type="com.njust.springboot.entity.Lecture">
        <id property="id" column="id" />
        <result property="title" column="title" />
        <result property="description" column="description" />
        <result property="organizerId" column="organizer_id" />
        <result property="speakerId" column="speaker_id" />
        <result property="startTime" column="start_time" />
        <result property="endTime" column="end_time" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
        <result property="password" column="password" />
    </resultMap>

    <insert id="insert" parameterType="com.njust.springboot.entity.Lecture">
        INSERT INTO lectures (title, description, organizer_id, speaker_id, start_time, end_time, created_at, updated_at, password)
        VALUES (#{title}, #{description}, #{organizerId}, #{speakerId}, #{startTime}, #{endTime}, #{createdAt}, #{updatedAt}, #{password})
    </insert>

    <delete id="deleteById" parameterType="long">
        DELETE FROM lectures WHERE id = #{id}
    </delete>

    <update id="update" parameterType="com.njust.springboot.entity.Lecture">
        UPDATE lectures
        SET title = #{title}, description = #{description}, organizer_id = #{organizerId}, speaker_id = #{speakerId},
            start_time = #{startTime}, end_time = #{endTime}, created_at = #{createdAt}, updated_at = #{updatedAt}, password = #{password}
        WHERE id = #{id}
    </update>

    <select id="selectById" parameterType="long" resultMap="LectureResultMap">
        SELECT * FROM lectures WHERE id = #{id}
    </select>

    <select id="selectAll" resultMap="LectureResultMap">
        SELECT * FROM lectures
    </select>
</mapper> 